package views

import "main/datatypes"
import "strconv"

templ Game(player *datatypes.Player, presents []*datatypes.Present, players []*datatypes.Player, turn *datatypes.Player) {
	<div hx-ext="ws" ws-connect={ "/ws/" + strconv.Itoa(player.Id) } class="flex md:flex-row flex-col md:h-screen md:overflow-y-auto">
		@Presents(presents, player, turn)
		@Players(players, player, turn)
	</div>
}

templ Presents(presents []*datatypes.Present, player *datatypes.Player, turn *datatypes.Player) {
	<div class="w-full md:min-h-full p-5 flex flex-col gap-5 md:overflow-y-auto" id="presents">
		for _, present := range presents {
			{{
	presentstyle := "rounded-lg p-2 border-2 w-fit"
	//if present.Gifter.Id == player.Id {
	//	presentstyle += " bg-giftedtransparent border-gifted"
	//} else if present.Player != nil && present.Player.Id == player.Id {
	//	presentstyle += " bg-yourstransparent border-yours"
	//} else {
	presentstyle += " bg-tertiarytransparent border-tertiary"
	//}
			}}
			<div class={ presentstyle }>
				if present.Gifter.Id == player.Id {
					<div><span class="text-primary"><i>Gifted by you</i></span></div>
				}
				if present.Wrapped {
					<span class="font-bold"><i>[ Wrapped ]</i></span>
				} else {
					<div class="font-bold">
						{ present.Name }
					</div>
					<div class="text-primary">
						<i>{ present.Player.Name }</i>
					</div>
					if datatypes.GameOver {
						<div class="text-primary">
							<i>Gifted by: { present.Gifter.Name }</i>
						</div>
					}
				}
				<div class="flex gap-2 mt-2">
					for _, tag := range present.Tags {
						<div class="border-primary text-primary border-2 rounded-lg px-1">
							{ tag }
						</div>
					}
				</div>
				if !present.Wrapped {
					<div class="mt-2"><a target="_blank" href={ templ.SafeURL(present.SteamUrl) }><span class="underline text-link"><i>Steam Page</i></span></a></div>
				}
				{{
	var buttoninner string
				}}
				if present.Player != nil && present.Player.Id == player.Id {
					{{ buttoninner = "Yours :)" }}
				} else {
					if present.Wrapped {
						{{
	buttoninner = "Take ğŸ˜‡"
						}}
					} else if present.Stolen {
						{{
	buttoninner = "Stolen this turn ğŸ”’"
						}}
					} else {
						{{
	buttoninner = "Steal ğŸ˜ˆ"
						}}
					}
				}
				if turn != nil && !datatypes.GameOver {
					if (present.Player != nil && present.Player.Id == player.Id) || player.Id != turn.Id || present.Stolen || datatypes.GameOver {
						<button type="button" class="mt-4 border-tertiary text-tertiary border-2 font-bold py-2 px-4 rounded" disabled>
							{ buttoninner }
						</button>
					} else {
						<button ws-send hx-vals={ "{\"presentid\": " + strconv.Itoa(present.Id) + ", \"playerid\": " + strconv.Itoa(player.Id) + "}" } type="button" class="mt-4 border-text border-2 hover:text-primary hover:border-primary focus:bg-primary focus:text-background focus:border-primary font-bold py-2 px-4 rounded">
							{ buttoninner }
						</button>
					}
				} else if datatypes.GameOver && present.Player != nil && present.Player.Id == player.Id {
					<button type="button" class="mt-4 border-tertiary text-tertiary border-2 font-bold py-2 px-4 rounded" disabled>
						{ buttoninner }
					</button>
				}
			</div>
		}
	</div>
}

templ Players(players []*datatypes.Player, curr_player *datatypes.Player, turn *datatypes.Player) {
	<div class="md:w-[40rem] md:min-h-full w-full bg-backgroundtwo p-5" id="players">
		for _, player := range players {
			{{
	playername := player.Name
	if player.Id == curr_player.Id {
		playername = playername + " (You)"
	}
			}}
			if turn != nil && player.Id == turn.Id {
				<div class="text-tertiary">
					-> { playername }
				</div>
			} else {
				<div>
					{ playername }
				</div>
			}
		}
	</div>
}
